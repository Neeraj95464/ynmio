{"ast":null,"code":"class PeerService {\n  constructor() {\n    if (!this.peer) {\n      this.peer = new RTCPeerConnection({\n        iceServers: [{\n          urls: ['stun:stun.l.google.com:19302', 'stun:global.stun.twilio.com:3478']\n        }]\n      });\n    }\n  }\n  async getAnswer(offer) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(offer);\n      const ans = await this.peer.createAnswer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(ans));\n      return ans;\n    }\n  }\n  async setLocalDescription(ans) {\n    if (this.peer) {\n      await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\n    }\n  }\n  async getOffer() {\n    if (this.peer) {\n      const offer = await this.peer.createOffer();\n      await this.peer.setLocalDescription(new RTCSessionDescription(offer));\n      return offer;\n    }\n  }\n}\nexport default new PeerService();","map":{"version":3,"names":["PeerService","constructor","peer","RTCPeerConnection","iceServers","urls","getAnswer","offer","setRemoteDescription","ans","createAnswer","setLocalDescription","RTCSessionDescription","getOffer","createOffer"],"sources":["C:/Users/NEERAJ KUMAR/Desktop/javascript/client/src/service/peer.js"],"sourcesContent":["class PeerService {\r\n    constructor () {\r\n        if (!this.peer) {\r\n            this.peer = new RTCPeerConnection( {\r\n                iceServers : [\r\n                    {\r\n                        urls:[\r\n                            'stun:stun.l.google.com:19302',\r\n                            'stun:global.stun.twilio.com:3478',\r\n                        ],\r\n                    },\r\n                ],\r\n            });\r\n        }\r\n    }\r\n\r\n    async getAnswer(offer) {\r\n        if(this.peer) {\r\n            await this.peer.setRemoteDescription(offer)\r\n            const ans=await this.peer.createAnswer()\r\n            await this.peer.setLocalDescription(new RTCSessionDescription(ans));\r\n            return ans;\r\n        }\r\n    }\r\n    async setLocalDescription(ans) {\r\n        if(this.peer){\r\n            await this.peer.setRemoteDescription(new RTCSessionDescription(ans));\r\n        }\r\n    }\r\n\r\n    async getOffer() {\r\n        if(this.peer){\r\n            const offer = await this.peer.createOffer();\r\n            await this.peer.setLocalDescription(new RTCSessionDescription(offer))\r\n            return offer;\r\n        }\r\n    }\r\n\r\n}\r\n\r\nexport default new PeerService();"],"mappings":"AAAA,MAAMA,WAAW,CAAC;EACdC,WAAWA,CAAA,EAAI;IACX,IAAI,CAAC,IAAI,CAACC,IAAI,EAAE;MACZ,IAAI,CAACA,IAAI,GAAG,IAAIC,iBAAiB,CAAE;QAC/BC,UAAU,EAAG,CACT;UACIC,IAAI,EAAC,CACD,8BAA8B,EAC9B,kCAAkC;QAE1C,CAAC;MAET,CAAC,CAAC;IACN;EACJ;EAEA,MAAMC,SAASA,CAACC,KAAK,EAAE;IACnB,IAAG,IAAI,CAACL,IAAI,EAAE;MACV,MAAM,IAAI,CAACA,IAAI,CAACM,oBAAoB,CAACD,KAAK,CAAC;MAC3C,MAAME,GAAG,GAAC,MAAM,IAAI,CAACP,IAAI,CAACQ,YAAY,EAAE;MACxC,MAAM,IAAI,CAACR,IAAI,CAACS,mBAAmB,CAAC,IAAIC,qBAAqB,CAACH,GAAG,CAAC,CAAC;MACnE,OAAOA,GAAG;IACd;EACJ;EACA,MAAME,mBAAmBA,CAACF,GAAG,EAAE;IAC3B,IAAG,IAAI,CAACP,IAAI,EAAC;MACT,MAAM,IAAI,CAACA,IAAI,CAACM,oBAAoB,CAAC,IAAII,qBAAqB,CAACH,GAAG,CAAC,CAAC;IACxE;EACJ;EAEA,MAAMI,QAAQA,CAAA,EAAG;IACb,IAAG,IAAI,CAACX,IAAI,EAAC;MACT,MAAMK,KAAK,GAAG,MAAM,IAAI,CAACL,IAAI,CAACY,WAAW,EAAE;MAC3C,MAAM,IAAI,CAACZ,IAAI,CAACS,mBAAmB,CAAC,IAAIC,qBAAqB,CAACL,KAAK,CAAC,CAAC;MACrE,OAAOA,KAAK;IAChB;EACJ;AAEJ;AAEA,eAAe,IAAIP,WAAW,EAAE"},"metadata":{},"sourceType":"module","externalDependencies":[]}